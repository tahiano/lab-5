Q1)SELECT s.student_name FROM student s NATURAL JOIN enrolled NATURAL JOIN semester_course cc 
WHERE cc.prof_id = 1 AND s.level="SR";

Q2)SELECT MAX(age) FROM student s WHERE s.major = "History" OR s.student_id IN (SELECT e.student_id FROM enrolled e 
NATURAL JOIN semester_course cc WHERE cc.prof_id = (SELECT p.prof_id FROM professor p WHERE p.prof_name = "Michael Miller"));



Q3)SELECT s.student_name ,c.name FROM student s LEFT OUTER JOIN enrolled e ON s.student_id=e.student_id 
LEFT OUTER JOIN course c ON c.course_code=e.course_code;

Q4)SELECT p.prof_name FROM professor p NATURAL LEFT JOIN semester_course cc NATURAL LEFT JOIN enrolled e 
GROUP BY (p.prof_id) HAVING COUNT(e.student_id)<5;


Q5)SELECT s.student_name FROM student s 
WHERE NOT EXISTS ((SELECT cc.course_code FROM semester_course cc WHERE cc.prof_id=2)  
EXCEPT (SELECT e.course_code FROM enrolled e WHERE e.student_id= s.student_id));

Q6)SELECT c.name FROM course c WHERE c.course_code NOT IN (SELECT cc.course_code FROM semester_course cc) OR c.course_code IN 
(SELECT ccc.course_code FROM semester_course ccc NATURAL JOIN professor NATURAL JOIN department d WHERE d.dept_name ="Computer Science");


Q7)SELECT s.student_name FROM student s
WHERE s.student_name LIKE 'M%' and s.age < 20
UNION
SELECT p.prof_name FROM professor p
WHERE p.prof_name LIKE'M%' AND EXISTS(
    SELECT count(*) AS x FROM (
		SELECT DISTINCT cc.course_code , cc.`quarter` , cc.`year` , cc.prof_id FROM semester_course cc
    )AS result
    WHERE result.prof_id = p.prof_id
    GROUP BY(result.prof_id)
    HAVING x > 2
);

Q8)SELECT p.prof_name ,p.prof_id FROM professor p LEFT JOIN semester_course cc ON p.prof_id=cc.prof_id
WHERE p.dept_id IN (1,2,3,4) 
GROUP BY (p.prof_id) HAVING COUNT(cc.course_code)<2;

Q8)SELECT p.prof_name ,p.prof_id FROM professor p NATURAL JOIN semester_course cc
WHERE p.dept_id IN (1,2,3,4) 
GROUP BY (p.prof_id) HAVING COUNT(cc.course_code)<2;


Q9)SELECT s.student_name ,p.prof_name,cc.course_code FROM student s 
LEFT OUTER JOIN enrolled e ON s.student_id=e.student_id 
LEFT OUTER JOIN semester_course cc ON (cc.course_code=e.course_code AND cc.quarter=e.quarter AND cc.year=e.year) 
RIGHT OUTER JOIN professor p ON p.prof_id=cc.prof_id 
UNION 
SELECT s.student_name ,p.prof_name,cc.course_code FROM student s 
LEFT OUTER JOIN enrolled e ON s.student_id=e.student_id
LEFT OUTER JOIN semester_course cc ON (cc.course_code=e.course_code AND cc.quarter=e.quarter AND cc.year=e.year) 
LEFT OUTER JOIN professor p ON p.prof_id=cc.prof_id;


Q10)SELECT c.name ,c.course_code, p.prof_name, p.prof_id 
FROM course c NATURAL JOIN semester_course cc NATURAL JOIN professor p
GROUP BY cc.prof_id,cc.course_code
HAVING COUNT(cc.course_code)>=2;


Q11)SELECT d.dept_name FROM semester_course cc  RIGHT JOIN professor p ON p.prof_id=cc.prof_id RIGHT JOIN department d ON d.dept_id=p.dept_id
GROUP BY (d.dept_id) HAVING COUNT(cc.course_code) < 3;